<<DataBase의 종류>>
 -MYSQL : Linux, Unix, Windows  포트:3306  *MariaDB  *Oracle에서 인수함
 -MSSQL : Windows 포트:1433
 -Oracle : Linux, Unix, Windows 포트:free
 -Cubrid : naver에서 만듦(Oracle,MySQL 장점을 취함)
 -amazonRDS : cloud 기반
 -DB2 : IBM 서버 전용
 -Sybase : IBM 서버 전용
 -NoSQL(MongDB) : 휘발성 DB전용. Not Only SQL. 단순검색 추가작업 채팅 등에 활용됨

 *React Node.js Vue등 추후 study해야 함

<< #state >>

<< show character set; >>
 - 본 서버와 일치시켜야 함
 - character set server
 - character set DB
 - character set client
 - character set Conn

<< show databases; >>

<< set names utf8mb4; >>

<< create database DB명; >> - root에서만 생성

<< drop database DB명; >> - root에서만 삭제

<< use DB명; >> - 해당 DB로 접속. database 변경

<< show 테이블명; >>  - 테이블 목록 확인

<< table 생성하기 >>
create table shop_member(
	midx int(8) not null auto_increment,
	mid char(15) not null,
	mpass varchar(20) not null,
	mname char(25) not null,
	mhp varchar(11) not null,
	maddr1 char(5) null,
	maddr text null,
	maddr_dtc text null,
	msex set('M','W') not null,
	mbirth varchar(8) not null,
	muse enum('Y','N') not null,
	mindate datetime not null default '0001-01-01 00:00:00',
	primary key(midx),
	unique key(mid)
);


<< 테이블에 data 생성, 밀어넣기 >>
insert into shop_member (midx, mid, mpass, mname, mhp, maddr1, maddr, maddr_dtc, msex, mbirth, muse, mindate) values ('0','kim','1234','김김김','01022341234','','','','M','19550115','Y','2023-01-25 14:42:28');

[shop_member]
자동증가값(예.사번)
아이디(중복불가)
비밀번호(암호화)
이름
핸드폰
주소(우편번호)
주소(도로명)
주소(상세주소)
성별
생년월일
휴면계정처리(y n):y(1년) s(서비스 종료)
가입일자

<< drop table 테이블명 >> - 테이블삭제


<< 테이블 컬럼항목 자료형 >>
1.문자형
 - varchar : 1~255(크기)  대소문자 구분 / 저장공간 조금 점유 / 속도빠름
 - char : 1~255(크기) 대소문자 미구분 / 속도느림
 - text : 21844 글자 저장 가능
 - mediumtext
 - longtext

2. boolean형
 - enum : 선택값 형태 / 최대 6만개
 - set : 선택값 형태 / 최대 64개

3. 숫자형
 - int : 숫자형 (범위: -2억 ~ +2억, unsigned 0 ~ +4억)
 - smallint : 숫자형 (범위: -3만 ~ +3만, unsigned 0 ~ +6만)
 - mediumint : 숫자형 (범위: -8만 ~ +8만, unsigned 0 ~ +16만)
 - bigint : 숫자형 (범위: -9천억 ~ +9천억, unsigned 0 ~ +1.8조)
 - float : 소숫점 관련 -3.1E ~ -1.17E  혹은 0~ 34E (unsigned 미적용)
 - double : 소숫점 관련 -1.7E ~-2.2E (unsigned 미적용)

4. 날짜형
 - date : yyyy-mm-dd
 - datetime : yyyy-mm-dd hh:mm:ss  혹은 yyyymmdd hh:mm:ss
 - time : hh:mm:ss
 - timestamp : 초단위 시간(linux unix에서 사용)


<< mysql 코드 설정>>
 - my.ini 에서 환경설정 가능 (화일 복사하여 원본화일 복사 후 조정. 매우 조심해야 함)
 - 추가해야하는 내용 :
	[client]
	default-character-set=utf8mb4
	[mysql]
	default-character-set=utf8mb4

<<DB접근방법>>
 - use DB명;  >>> table 생성 >>> data 입력

<<Data 삭제방법>>
 - delete from 테이블명 where 필드명= **;
 -(전체삭제) delete from 테이블명;

<<테이블 정보보기>>
 - desc 테이블명;

<< \status >>
 - 해당 DataBase 현황표. 개요 보기

<< 로그인하는 방법. root말고도 >>
 - cmd로 접속 
 - 경로찾아가기 c:\program files\mysql\mysql server 8.0\bin 으로 찾아가기
 - mysql -u 유저명 -p  >>엔터>>비밀번호 입력>>login
 - root 사용자 : mysql -u root -p >>엔터>>비밀번호 입력>>login

<< 사용자 추가하는 방법 >>
 - mysql DataBase에 무조건 진입 먼저해야 한다
 - use mysql : root는 조심해야 함
 - create user '사용자아이디'@'localhost' identified by '비밀번호';
 - 외부접속권한부여는 
   create user '사용자아이디'@'%' identified by '비밀번호';  %에다 ip 주소를 입력

<< 사용자에게 DB 권한 부여 >>
 - grant all privileges on 데이타베이스명.* to '사용자아이디'@'localhost';
   ※localhost 대신에 ip 주소를 바꾸면 외부에서도 접속이 가능해짐

<< 외부접속 >>
 - mysql -h 10.10.58.70 -u 사용자아이디 -p 

----------------------------------------------------------------------------------------

<< 테이블 생성하기 >>
[기본조건]
(예약번호)자동증가		rsidx		varchar(10)
고객명			rs_name		varchar(50)
휴대폰:고유값		rs_tel		varchar(11)
예약일자			rs_date		yyyy-mm-dd
예약시간			rs_time		hh:mm:ss (hh단위)
방문인원	0		rs_person		char(1)   최대 2명으로 한정됨
입력일자(timestamp)	rs_indate		yyyy-mm-dd hh:mm:ss
      //혹은 enum('0','1','2')  set('0','1','2')
create table reservation(
	rs_idx int(10) not null auto_increment,
	rs_name varchar(50) not null,
	rs_tel varchar(11) not null,
	rs_date date null default '0000-01-01',
	rs_time time null default '00:00:00',
	rs_person char(1) null default '0',
	rs_indate datetime not null default '0000-01-01 00:00:00',
	primary key(rs_idx),
	unique key(rs_tel)
);

<<실습.평가하기>>
create table poll(
	rep_seq int(10) not null auto_increment,
	rep_person varchar(50) not null,
	rep_mail varchar(100) not null,
	rep_score set('1','2','3','4','5') not null,
	rep_story varchar(100) null,
	rep_date datetime not null default '0000-01-01 00:00:00',
	primary key(rep_seq),
	unique key(rep_mail)
);

[test]
insert into poll values('0','홍길동','hong@naver.com','3','나의살던고향','2023-01-24 17:00:00');
insert into poll values('0','홍길동1','hong1@naver.com','4','나의살던고향','2023-01-24 17:00:00');
insert into poll values('0','홍길동3','hong3@naver.com','5','나의살던고향',default);
insert into poll values('0','홍길동4','hong4@naver.com',default,'나의살던고향',default);





<< 테이블의 컬럼 속성 등 바꾸기>>
 - alter table 테이블명 modify 컬럼명 바꿀내용 등 정보를 모두다 입력해야 함;
 - 단, key 컬럼은 속성 바꾸기 등에 매우 신중해야 한다
 

<<data 밀어넣기>>
 - 하나씩 밀어넣을 때 : insert into 테이블 (컬럼명1,2,3...) values ('','','',...);

insert into reservation values('0','홍길동','01012345678','2023-01-27','11:00:00','2','2023-01-26 10:45:00');
 → 컬럼없이 insert도 가능함

<< show create table 테이블명;>>
 - 생성한 테이블 정보를 확인하는 방법

<<변수 보는 방법>>
 - show variables like "char%";

<< my.ini 설정하는 방법 >>
[client]
default-character-set=euckr

[mysql]
default-character-set=utf8mb4

[mysqldump]
default-character-set=utf8mb4

[mysqld]
character-set-client-handshake=FALSE
init_connect="SET collation_connect = utf8mb4i"
init_connect="SET NAMES utf8mb4"
character-set-server = euckr

<<엑셀 substitute>>
 = substitute(셀위치,"바꿀거","바뀔거")

<<update 수정하기>>
 update reservation set rs_tel='01012346435' where rs_idx='85'
 update 테이블명 set 필드명='변경할 값' where 고정필드명='필드값';

<<컬럼(필드명) 추가하기>>
alter table reservation add rs_mail  char(100) null(not null);
alter table 테이블명 add 컬럼명 컬럼속성1 컬럼속성2;

<<컬럼(필드명) 삭제하기>>
alter table reservation drop rs_mail;
alter table 테이블명 drop 컬럼명;

<<한꺼번에 2개 컬럼 update>>
update reservation set rs_name='오동통', rs_tel='01087654321' where rs_idx='85';
 → 2개 이상의 컬럼을 수정할 경우에는 콤마 혹은  and를 사용한다

<< limit >>
select * from 테이블명 limit 시작하는 행번호, 뿌려주는 행 갯수;
  예.select * from reservation limit 1,10;
 →처음부터 10개만 select

<< order by, limit 결합 >>
select * from 테이블명 order by 컬럼명 desc (asc) limit 행번호, 출력갯수; 
desc : 역순, asc : 순서대로
limit는 뒷쪽에 있어야 함

<<like, substring>>
query language와 동일하게 다 작동됨

<<data base 명령어>>
글수정하기: update set
게시판 글쓰기 : insert into
게시판 글보기 : select
게시글 삭제하기 : delete
※ alter는 웹에서 작동되는 경우는 거의 없음

<< 테이블 (구조) 복제하기(데이터X) >>
create table if not exists reservation2 like reservation; 테이블만 복제하는 경우
create table if not exists 복제해서만들테이블명 like 복제할테이블명;
create table reservation3 like reservation;
create table 복제해서만들테이블명 like 복제할테이블명;

<<테이블 안의 데이터 복제하기>>
insert into 데이터넣을테이블명 select * from 복제테이터가있는테이블명;

<< 테이블 및 데이터 모두모두 복제하기 >>
create table reservaion3 select * from reservation;
create table 새로운 테이블명 select * from 원테이블명;
→문제점: 키값, auto_increment가 사라져버림. 그러므로 권장하지 않음

<<backup 하기>>
promt상태에서 mysqldump -u 사용자명 -p 데이터베이스명 > 복제위치\databackup.sql
c:\program files\mysql\mysql server 8.0\bin  경로에서
mysqldump -u 사용자아이디 -p DB명 > d:\( 백업할 위치) mshop.sql (백업화일명)

<<테이블만 backup하기>>
mysql -u 사용자아이디 -p DB명 테이블명> d:\( 백업할 위치) 테이블명.sql


<<복구하기>>
mysql -u 사용자명 -p 데이터베이스명 < 복제위치\databackup.sql

※ < > 방향에 따라 백업 혹은 복구하기가 되는 것임

<<필드명(컬럼) 원하는 위치에 추가하는 방법 >>
 - alter table 테이블명 add 컬럼명 자료형 null(not null) after(before) 위치컬럼(필드명);

----------------------------------------------------------------------------------------


<< 테이블 생성하기 >>
[기본조건]
(예약번호)자동증가		rsidx		varchar(10)
고객명			rs_name		varchar(50)
휴대폰:고유값		rs_tel		varchar(11)
예약일자			rs_date		yyyy-mm-dd
예약시간			rs_time		hh:mm:ss (hh단위)
방문인원	0		rs_person		char(1)   최대 2명으로 한정됨
입력일자(timestamp)	rs_indate		yyyy-mm-dd hh:mm:ss
      //혹은 enum('0','1','2')  set('0','1','2')
create table reservation(
	rs_idx int(10) not null auto_increment,
	rs_name varchar(50) not null,
	rs_tel varchar(11) not null,
	rs_date date null default '0000-01-01',
	rs_time time null default '00:00:00',
	rs_person char(1) null default '0',
	rs_indate datetime not null default '0000-01-01 00:00:00',
	primary key(rs_idx),
	unique key(rs_tel)
);

<<실습.평가하기>>
create table poll(
	rep_seq int(10) not null auto_increment,
	rep_person varchar(50) not null,
	rep_mail varchar(100) not null,
	rep_score set('1','2','3','4','5') not null,
	rep_story varchar(100) null,
	rep_date datetime not null default '0000-01-01 00:00:00',
	primary key(rep_seq),
	unique key(rep_mail)
);

[test]
insert into poll values('0','홍길동','hong@naver.com','3','나의살던고향','2023-01-24 17:00:00');
insert into poll values('0','홍길동1','hong1@naver.com','4','나의살던고향','2023-01-24 17:00:00');
insert into poll values('0','홍길동3','hong3@naver.com','5','나의살던고향',default);
insert into poll values('0','홍길동4','hong4@naver.com',default,'나의살던고향',default);





<< 테이블의 컬럼 속성 등 바꾸기>>
 - alter table 테이블명 modify 컬럼명 바꿀내용 등 정보를 모두다 입력해야 함;
 - 단, key 컬럼은 속성 바꾸기 등에 매우 신중해야 한다
 

<<data 밀어넣기>>
 - 하나씩 밀어넣을 때 : insert into 테이블 (컬럼명1,2,3...) values ('','','',...);

insert into reservation values('0','홍길동','01012345678','2023-01-27','11:00:00','2','2023-01-26 10:45:00');
 → 컬럼없이 insert도 가능함

<< show create table 테이블명;>>
 - 생성한 테이블 정보를 확인하는 방법

<<변수 보는 방법>>
 - show variables like "char%";

<< my.ini 설정하는 방법 >>
[client]
default-character-set=euckr

[mysql]
default-character-set=utf8mb4

[mysqldump]
default-character-set=utf8mb4

[mysqld]
character-set-client-handshake=FALSE
init_connect="SET collation_connect = utf8mb4i"
init_connect="SET NAMES utf8mb4"
character-set-server = euckr

<<엑셀 substitute>>
 = substitute(셀위치,"바꿀거","바뀔거")

<<update 수정하기>>
 update reservation set rs_tel='01012346435' where rs_idx='85'
 update 테이블명 set 필드명='변경할 값' where 고정필드명='필드값';

<<컬럼(필드명) 추가하기>>
alter table reservation add rs_mail  char(100) null(not null);
alter table 테이블명 add 컬럼명 컬럼속성1 컬럼속성2;

<<컬럼(필드명) 삭제하기>>
alter table reservation drop rs_mail;
alter table 테이블명 drop 컬럼명;

<<한꺼번에 2개 컬럼 update>>
update reservation set rs_name='오동통', rs_tel='01087654321' where rs_idx='85';
 → 2개 이상의 컬럼을 수정할 경우에는 콤마 혹은  and를 사용한다

<< limit >>
select * from 테이블명 limit 시작하는 행번호, 뿌려주는 행 갯수;
  예.select * from reservation limit 1,10;
 →처음부터 10개만 select

<< order by, limit 결합 >>
select * from 테이블명 order by 컬럼명 desc (asc) limit 행번호, 출력갯수; 
desc : 역순, asc : 순서대로
limit는 뒷쪽에 있어야 함

<<like, substring>>
query language와 동일하게 다 작동됨

<<data base 명령어>>
글수정하기: update set
게시판 글쓰기 : insert into
게시판 글보기 : select
게시글 삭제하기 : delete
※ alter는 웹에서 작동되는 경우는 거의 없음

<< 테이블 (구조) 복제하기(데이터X) >>
create table if not exists reservation2 like reservation; 테이블만 복제하는 경우
create table if not exists 복제해서만들테이블명 like 복제할테이블명;
create table reservation3 like reservation;
create table 복제해서만들테이블명 like 복제할테이블명;

<<테이블 안의 데이터 복제하기>>
insert into 데이터넣을테이블명 select * from 복제테이터가있는테이블명;

<< 테이블 및 데이터 모두모두 복제하기 >>
create table reservaion3 select * from reservation;
create table 새로운 테이블명 select * from 원테이블명;
→문제점: 키값, auto_increment가 사라져버림. 그러므로 권장하지 않음

<<backup 하기>>
promt상태에서 mysqldump -u 사용자명 -p 데이터베이스명 > 복제위치\databackup.sql
c:\program files\mysql\mysql server 8.0\bin  경로에서
mysqldump -u 사용자아이디 -p DB명 > d:\( 백업할 위치) mshop.sql (백업화일명)

<<테이블만 backup하기>>
mysql -u 사용자아이디 -p DB명 테이블명> d:\( 백업할 위치) 테이블명.sql


<<복구하기>>
mysql -u 사용자명 -p 데이터베이스명 < 복제위치\databackup.sql

※ < > 방향에 따라 백업 혹은 복구하기가 되는 것임

<<필드명(컬럼) 원하는 위치에 추가하는 방법 >>
 - alter table 테이블명 add 컬럼명 자료형 null(not null) after(before) 위치컬럼(필드명);

